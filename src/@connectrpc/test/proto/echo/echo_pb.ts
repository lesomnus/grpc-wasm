// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file echo/echo.proto (package echo, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file echo/echo.proto.
 */
export const file_echo_echo: GenFile = /*@__PURE__*/
  fileDesc("Cg9lY2hvL2VjaG8ucHJvdG8SBGVjaG8i5AEKC0VjaG9SZXF1ZXN0EhwKBnN0YXR1cxgBIAEoCzIMLmVjaG8uU3RhdHVzEg8KB21lc3NhZ2UYAiABKAkSGwoOY2lyY3VsYXJfc2hpZnQYBCABKAVIAIgBARITCgZyZXBlYXQYBSABKA1IAYgBARIWCglvdmVyX3ZvaWQYBiABKAhIAogBARIwCgxkYXRlX2NyZWF0ZWQYDyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQhEKD19jaXJjdWxhcl9zaGlmdEIJCgdfcmVwZWF0QgwKCl9vdmVyX3ZvaWQiYwoMRWNob1Jlc3BvbnNlEg8KB21lc3NhZ2UYAiABKAkSEAoIc2VxdWVuY2UYAyABKA0SMAoMZGF0ZV9jcmVhdGVkGA8gASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCI2ChFFY2hvQmF0Y2hSZXNwb25zZRIhCgVpdGVtcxgBIAMoCzISLmVjaG8uRWNob1Jlc3BvbnNlIicKBlN0YXR1cxIMCgRjb2RlGAEgASgFEg8KB21lc3NhZ2UYAiABKAky3gEKC0VjaG9TZXJ2aWNlEi8KBE9uY2USES5lY2hvLkVjaG9SZXF1ZXN0GhIuZWNoby5FY2hvUmVzcG9uc2UiABIxCgRNYW55EhEuZWNoby5FY2hvUmVxdWVzdBoSLmVjaG8uRWNob1Jlc3BvbnNlIgAwARI2CgRCdWZmEhEuZWNoby5FY2hvUmVxdWVzdBoXLmVjaG8uRWNob0JhdGNoUmVzcG9uc2UiACgBEjMKBExpdmUSES5lY2hvLkVjaG9SZXF1ZXN0GhIuZWNoby5FY2hvUmVzcG9uc2UiACgBMAFCLVorZ2l0aHViLmNvbS9sZXNvbW51cy9ncnBjLXdhc20vaW50ZXJuYWwvZWNob2IGcHJvdG8z", [file_google_protobuf_timestamp]);

/**
 * @generated from message echo.EchoRequest
 */
export type EchoRequest = Message<"echo.EchoRequest"> & {
  /**
   * Server should respond with this status.
   *
   * @generated from field: echo.Status status = 1;
   */
  status?: Status;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * Perform a circular shift on themessage
   * to the right by the given number.
   * If the number is negative, shift to the left.
   *
   * @generated from field: optional int32 circular_shift = 4;
   */
  circularShift?: number;

  /**
   * Server should respond with this number of EchoResponse.
   * This effect only with stream method.
   *
   * @generated from field: optional uint32 repeat = 5;
   */
  repeat?: number;

  /**
   * Server does not response if this is true.
   *
   * @generated from field: optional bool over_void = 6;
   */
  overVoid?: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp date_created = 15;
   */
  dateCreated?: Timestamp;
};

/**
 * Describes the message echo.EchoRequest.
 * Use `create(EchoRequestSchema)` to create a new message.
 */
export const EchoRequestSchema: GenMessage<EchoRequest> = /*@__PURE__*/
  messageDesc(file_echo_echo, 0);

/**
 * @generated from message echo.EchoResponse
 */
export type EchoResponse = Message<"echo.EchoResponse"> & {
  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: uint32 sequence = 3;
   */
  sequence: number;

  /**
   * @generated from field: google.protobuf.Timestamp date_created = 15;
   */
  dateCreated?: Timestamp;
};

/**
 * Describes the message echo.EchoResponse.
 * Use `create(EchoResponseSchema)` to create a new message.
 */
export const EchoResponseSchema: GenMessage<EchoResponse> = /*@__PURE__*/
  messageDesc(file_echo_echo, 1);

/**
 * @generated from message echo.EchoBatchResponse
 */
export type EchoBatchResponse = Message<"echo.EchoBatchResponse"> & {
  /**
   * @generated from field: repeated echo.EchoResponse items = 1;
   */
  items: EchoResponse[];
};

/**
 * Describes the message echo.EchoBatchResponse.
 * Use `create(EchoBatchResponseSchema)` to create a new message.
 */
export const EchoBatchResponseSchema: GenMessage<EchoBatchResponse> = /*@__PURE__*/
  messageDesc(file_echo_echo, 2);

/**
 * @generated from message echo.Status
 */
export type Status = Message<"echo.Status"> & {
  /**
   * @generated from field: int32 code = 1;
   */
  code: number;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message echo.Status.
 * Use `create(StatusSchema)` to create a new message.
 */
export const StatusSchema: GenMessage<Status> = /*@__PURE__*/
  messageDesc(file_echo_echo, 3);

/**
 * @generated from service echo.EchoService
 */
export const EchoService: GenService<{
  /**
   * @generated from rpc echo.EchoService.Once
   */
  once: {
    methodKind: "unary";
    input: typeof EchoRequestSchema;
    output: typeof EchoResponseSchema;
  },
  /**
   * @generated from rpc echo.EchoService.Many
   */
  many: {
    methodKind: "server_streaming";
    input: typeof EchoRequestSchema;
    output: typeof EchoResponseSchema;
  },
  /**
   * @generated from rpc echo.EchoService.Buff
   */
  buff: {
    methodKind: "client_streaming";
    input: typeof EchoRequestSchema;
    output: typeof EchoBatchResponseSchema;
  },
  /**
   * @generated from rpc echo.EchoService.Live
   */
  live: {
    methodKind: "bidi_streaming";
    input: typeof EchoRequestSchema;
    output: typeof EchoResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_echo_echo, 0);

